#!/bin/sh

set -e

STATE="$1"
FILES="$2"

tmp_backup_dir="$FILES"/tmp/backup
dest_dir_file="$FILES"/files/dest_dir
filename_file="$FILES"/files/filename
permissions_file="$FILES"/files/permissions

safe_copy() {
    if [ $# -gt 2 ]; then
        echo "safe_copy can only handle one file copy at a time" >&2
        exit 2
    fi
    cp -a "$1" "$2".tmp || return $?
    sync "$2".tmp || return $?
    mv "$2".tmp "$2" || return $?
    sync "$(dirname "$2")" || return $?
}

case "$STATE" in

    NeedsArtifactReboot)
        echo "No"
        ;;

    SupportsRollback)
        echo "Yes"
        ;;

    ArtifactInstall)
        dest_dir=$(cat "${dest_dir_file}")
        filename=$(cat "${filename_file}")
        test -z "$dest_dir" -o -z "$filename" && \
            echo "Fatal error: dest_dir or filename are undefined." >&2 && exit 1
        mkdir -p "${dest_dir}"
        mkdir -p "${tmp_backup_dir}"
        if test -f "${dest_dir}/${filename}"
        then
            if ! safe_copy "${dest_dir}/${filename}" "${tmp_backup_dir}/${filename}"
            then
                ret=$?
                # Make sure there is no half-backup lying around.
                rm -rf "${tmp_backup_dir}"
                exit $ret
            fi
        fi
        # Previous revisions of this update module did not use the
        # permissions_file, so it might not exist.
        if test -f "${permissions_file}"
        then
            mode=$(cat "${permissions_file}")
            chmod "${mode}" "$FILES"/files/"${filename}"
        fi
        safe_copy "$FILES"/files/"${filename}" "${dest_dir}/${filename}"
        ;;

    ArtifactRollback)
        filename=$(cat "${filename_file}")
        test -f "${tmp_backup_dir}/${filename}" || exit 0
        dest_dir=$(cat "${dest_dir_file}")
        test -z "$dest_dir" -o -z "$filename" && \
            echo "Fatal error: dest_dir or filename are undefined." && exit 1
        safe_copy "${tmp_backup_dir}/${filename}" "${dest_dir}/${filename}"
        ;;
esac

exit 0

